/*
Copyright Â© 2021-2023 Infinite Devices GmbH

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package infinimesh.shadow;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

message State {
  google.protobuf.Timestamp timestamp = 1;
  google.protobuf.Struct data = 2;
}

message ConnectionState {
  google.protobuf.Timestamp timestamp = 1;
  bool connected = 2;
  string client_id = 3; // MQTT Client ID used for connection
}

message Shadow {
  string device = 1;
  State reported = 2;
  State desired = 3;
  ConnectionState connection = 4;
}

message GetRequest { repeated string pool = 1; }

message GetResponse { repeated Shadow shadows = 1; }

enum StateKey {
  REPORTED = 0;
  DESIRED = 1;
  CONNECTION = 2;
}

message RemoveRequest {
  string device = 1;
  StateKey state_key = 2;
  string key = 3;
}

message StreamShadowRequest {
  repeated string devices = 1;
  bool only_delta = 2;
  bool sync = 3;
}

service ShadowService {
  rpc Get(GetRequest) returns (GetResponse);
  rpc Patch(Shadow) returns (Shadow);
  rpc Remove(RemoveRequest) returns (Shadow);
  rpc StreamShadow(StreamShadowRequest) returns (stream Shadow);
}
