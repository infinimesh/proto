// source: node/accounts/accounts.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var node_access_access_pb = require('../../node/access/access_pb.js');
goog.object.extend(proto, node_access_access_pb);
goog.exportSymbol('proto.infinimesh.node.accounts.Account', null, global);
goog.exportSymbol('proto.infinimesh.node.accounts.Accounts', null, global);
goog.exportSymbol('proto.infinimesh.node.accounts.CreateRequest', null, global);
goog.exportSymbol('proto.infinimesh.node.accounts.CreateResponse', null, global);
goog.exportSymbol('proto.infinimesh.node.accounts.Credentials', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infinimesh.node.accounts.Credentials = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.infinimesh.node.accounts.Credentials.repeatedFields_, null);
};
goog.inherits(proto.infinimesh.node.accounts.Credentials, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infinimesh.node.accounts.Credentials.displayName = 'proto.infinimesh.node.accounts.Credentials';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infinimesh.node.accounts.Account = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.infinimesh.node.accounts.Account, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infinimesh.node.accounts.Account.displayName = 'proto.infinimesh.node.accounts.Account';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infinimesh.node.accounts.CreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.infinimesh.node.accounts.CreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infinimesh.node.accounts.CreateRequest.displayName = 'proto.infinimesh.node.accounts.CreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infinimesh.node.accounts.CreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.infinimesh.node.accounts.CreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infinimesh.node.accounts.CreateResponse.displayName = 'proto.infinimesh.node.accounts.CreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.infinimesh.node.accounts.Accounts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.infinimesh.node.accounts.Accounts.repeatedFields_, null);
};
goog.inherits(proto.infinimesh.node.accounts.Accounts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.infinimesh.node.accounts.Accounts.displayName = 'proto.infinimesh.node.accounts.Accounts';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.infinimesh.node.accounts.Credentials.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infinimesh.node.accounts.Credentials.prototype.toObject = function(opt_includeInstance) {
  return proto.infinimesh.node.accounts.Credentials.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infinimesh.node.accounts.Credentials} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infinimesh.node.accounts.Credentials.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dataList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infinimesh.node.accounts.Credentials}
 */
proto.infinimesh.node.accounts.Credentials.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infinimesh.node.accounts.Credentials;
  return proto.infinimesh.node.accounts.Credentials.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infinimesh.node.accounts.Credentials} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infinimesh.node.accounts.Credentials}
 */
proto.infinimesh.node.accounts.Credentials.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infinimesh.node.accounts.Credentials.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infinimesh.node.accounts.Credentials.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infinimesh.node.accounts.Credentials} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infinimesh.node.accounts.Credentials.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.infinimesh.node.accounts.Credentials.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.infinimesh.node.accounts.Credentials} returns this
 */
proto.infinimesh.node.accounts.Credentials.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string data = 2;
 * @return {!Array<string>}
 */
proto.infinimesh.node.accounts.Credentials.prototype.getDataList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.infinimesh.node.accounts.Credentials} returns this
 */
proto.infinimesh.node.accounts.Credentials.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.infinimesh.node.accounts.Credentials} returns this
 */
proto.infinimesh.node.accounts.Credentials.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infinimesh.node.accounts.Credentials} returns this
 */
proto.infinimesh.node.accounts.Credentials.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infinimesh.node.accounts.Account.prototype.toObject = function(opt_includeInstance) {
  return proto.infinimesh.node.accounts.Account.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infinimesh.node.accounts.Account} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infinimesh.node.accounts.Account.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    defaultNamespace: jspb.Message.getFieldWithDefault(msg, 4, ""),
    access: (f = msg.getAccess()) && node_access_access_pb.Access.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infinimesh.node.accounts.Account}
 */
proto.infinimesh.node.accounts.Account.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infinimesh.node.accounts.Account;
  return proto.infinimesh.node.accounts.Account.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infinimesh.node.accounts.Account} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infinimesh.node.accounts.Account}
 */
proto.infinimesh.node.accounts.Account.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultNamespace(value);
      break;
    case 5:
      var value = new node_access_access_pb.Access;
      reader.readMessage(value,node_access_access_pb.Access.deserializeBinaryFromReader);
      msg.setAccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infinimesh.node.accounts.Account.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infinimesh.node.accounts.Account.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infinimesh.node.accounts.Account} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infinimesh.node.accounts.Account.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getDefaultNamespace();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAccess();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      node_access_access_pb.Access.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.infinimesh.node.accounts.Account.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.infinimesh.node.accounts.Account} returns this
 */
proto.infinimesh.node.accounts.Account.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.infinimesh.node.accounts.Account.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.infinimesh.node.accounts.Account} returns this
 */
proto.infinimesh.node.accounts.Account.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool enabled = 3;
 * @return {boolean}
 */
proto.infinimesh.node.accounts.Account.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.infinimesh.node.accounts.Account} returns this
 */
proto.infinimesh.node.accounts.Account.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string default_namespace = 4;
 * @return {string}
 */
proto.infinimesh.node.accounts.Account.prototype.getDefaultNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.infinimesh.node.accounts.Account} returns this
 */
proto.infinimesh.node.accounts.Account.prototype.setDefaultNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional infinimesh.node.access.Access access = 5;
 * @return {?proto.infinimesh.node.access.Access}
 */
proto.infinimesh.node.accounts.Account.prototype.getAccess = function() {
  return /** @type{?proto.infinimesh.node.access.Access} */ (
    jspb.Message.getWrapperField(this, node_access_access_pb.Access, 5));
};


/**
 * @param {?proto.infinimesh.node.access.Access|undefined} value
 * @return {!proto.infinimesh.node.accounts.Account} returns this
*/
proto.infinimesh.node.accounts.Account.prototype.setAccess = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.infinimesh.node.accounts.Account} returns this
 */
proto.infinimesh.node.accounts.Account.prototype.clearAccess = function() {
  return this.setAccess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.infinimesh.node.accounts.Account.prototype.hasAccess = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infinimesh.node.accounts.CreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.infinimesh.node.accounts.CreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infinimesh.node.accounts.CreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infinimesh.node.accounts.CreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: (f = msg.getAccount()) && proto.infinimesh.node.accounts.Account.toObject(includeInstance, f),
    credentials: (f = msg.getCredentials()) && proto.infinimesh.node.accounts.Credentials.toObject(includeInstance, f),
    namespace: jspb.Message.getFieldWithDefault(msg, 3, ""),
    access: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infinimesh.node.accounts.CreateRequest}
 */
proto.infinimesh.node.accounts.CreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infinimesh.node.accounts.CreateRequest;
  return proto.infinimesh.node.accounts.CreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infinimesh.node.accounts.CreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infinimesh.node.accounts.CreateRequest}
 */
proto.infinimesh.node.accounts.CreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.infinimesh.node.accounts.Account;
      reader.readMessage(value,proto.infinimesh.node.accounts.Account.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 2:
      var value = new proto.infinimesh.node.accounts.Credentials;
      reader.readMessage(value,proto.infinimesh.node.accounts.Credentials.deserializeBinaryFromReader);
      msg.setCredentials(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infinimesh.node.accounts.CreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infinimesh.node.accounts.CreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infinimesh.node.accounts.CreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infinimesh.node.accounts.CreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.infinimesh.node.accounts.Account.serializeBinaryToWriter
    );
  }
  f = message.getCredentials();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.infinimesh.node.accounts.Credentials.serializeBinaryToWriter
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional Account account = 1;
 * @return {?proto.infinimesh.node.accounts.Account}
 */
proto.infinimesh.node.accounts.CreateRequest.prototype.getAccount = function() {
  return /** @type{?proto.infinimesh.node.accounts.Account} */ (
    jspb.Message.getWrapperField(this, proto.infinimesh.node.accounts.Account, 1));
};


/**
 * @param {?proto.infinimesh.node.accounts.Account|undefined} value
 * @return {!proto.infinimesh.node.accounts.CreateRequest} returns this
*/
proto.infinimesh.node.accounts.CreateRequest.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.infinimesh.node.accounts.CreateRequest} returns this
 */
proto.infinimesh.node.accounts.CreateRequest.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.infinimesh.node.accounts.CreateRequest.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Credentials credentials = 2;
 * @return {?proto.infinimesh.node.accounts.Credentials}
 */
proto.infinimesh.node.accounts.CreateRequest.prototype.getCredentials = function() {
  return /** @type{?proto.infinimesh.node.accounts.Credentials} */ (
    jspb.Message.getWrapperField(this, proto.infinimesh.node.accounts.Credentials, 2));
};


/**
 * @param {?proto.infinimesh.node.accounts.Credentials|undefined} value
 * @return {!proto.infinimesh.node.accounts.CreateRequest} returns this
*/
proto.infinimesh.node.accounts.CreateRequest.prototype.setCredentials = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.infinimesh.node.accounts.CreateRequest} returns this
 */
proto.infinimesh.node.accounts.CreateRequest.prototype.clearCredentials = function() {
  return this.setCredentials(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.infinimesh.node.accounts.CreateRequest.prototype.hasCredentials = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string namespace = 3;
 * @return {string}
 */
proto.infinimesh.node.accounts.CreateRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.infinimesh.node.accounts.CreateRequest} returns this
 */
proto.infinimesh.node.accounts.CreateRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 access = 4;
 * @return {number}
 */
proto.infinimesh.node.accounts.CreateRequest.prototype.getAccess = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.infinimesh.node.accounts.CreateRequest} returns this
 */
proto.infinimesh.node.accounts.CreateRequest.prototype.setAccess = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.infinimesh.node.accounts.CreateRequest} returns this
 */
proto.infinimesh.node.accounts.CreateRequest.prototype.clearAccess = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.infinimesh.node.accounts.CreateRequest.prototype.hasAccess = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infinimesh.node.accounts.CreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.infinimesh.node.accounts.CreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infinimesh.node.accounts.CreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infinimesh.node.accounts.CreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: (f = msg.getAccount()) && proto.infinimesh.node.accounts.Account.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infinimesh.node.accounts.CreateResponse}
 */
proto.infinimesh.node.accounts.CreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infinimesh.node.accounts.CreateResponse;
  return proto.infinimesh.node.accounts.CreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infinimesh.node.accounts.CreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infinimesh.node.accounts.CreateResponse}
 */
proto.infinimesh.node.accounts.CreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.infinimesh.node.accounts.Account;
      reader.readMessage(value,proto.infinimesh.node.accounts.Account.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infinimesh.node.accounts.CreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infinimesh.node.accounts.CreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infinimesh.node.accounts.CreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infinimesh.node.accounts.CreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.infinimesh.node.accounts.Account.serializeBinaryToWriter
    );
  }
};


/**
 * optional Account account = 1;
 * @return {?proto.infinimesh.node.accounts.Account}
 */
proto.infinimesh.node.accounts.CreateResponse.prototype.getAccount = function() {
  return /** @type{?proto.infinimesh.node.accounts.Account} */ (
    jspb.Message.getWrapperField(this, proto.infinimesh.node.accounts.Account, 1));
};


/**
 * @param {?proto.infinimesh.node.accounts.Account|undefined} value
 * @return {!proto.infinimesh.node.accounts.CreateResponse} returns this
*/
proto.infinimesh.node.accounts.CreateResponse.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.infinimesh.node.accounts.CreateResponse} returns this
 */
proto.infinimesh.node.accounts.CreateResponse.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.infinimesh.node.accounts.CreateResponse.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.infinimesh.node.accounts.Accounts.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.infinimesh.node.accounts.Accounts.prototype.toObject = function(opt_includeInstance) {
  return proto.infinimesh.node.accounts.Accounts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.infinimesh.node.accounts.Accounts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infinimesh.node.accounts.Accounts.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountsList: jspb.Message.toObjectList(msg.getAccountsList(),
    proto.infinimesh.node.accounts.Account.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.infinimesh.node.accounts.Accounts}
 */
proto.infinimesh.node.accounts.Accounts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.infinimesh.node.accounts.Accounts;
  return proto.infinimesh.node.accounts.Accounts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.infinimesh.node.accounts.Accounts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.infinimesh.node.accounts.Accounts}
 */
proto.infinimesh.node.accounts.Accounts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.infinimesh.node.accounts.Account;
      reader.readMessage(value,proto.infinimesh.node.accounts.Account.deserializeBinaryFromReader);
      msg.addAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.infinimesh.node.accounts.Accounts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.infinimesh.node.accounts.Accounts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.infinimesh.node.accounts.Accounts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.infinimesh.node.accounts.Accounts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.infinimesh.node.accounts.Account.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Account accounts = 1;
 * @return {!Array<!proto.infinimesh.node.accounts.Account>}
 */
proto.infinimesh.node.accounts.Accounts.prototype.getAccountsList = function() {
  return /** @type{!Array<!proto.infinimesh.node.accounts.Account>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.infinimesh.node.accounts.Account, 1));
};


/**
 * @param {!Array<!proto.infinimesh.node.accounts.Account>} value
 * @return {!proto.infinimesh.node.accounts.Accounts} returns this
*/
proto.infinimesh.node.accounts.Accounts.prototype.setAccountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.infinimesh.node.accounts.Account=} opt_value
 * @param {number=} opt_index
 * @return {!proto.infinimesh.node.accounts.Account}
 */
proto.infinimesh.node.accounts.Accounts.prototype.addAccounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.infinimesh.node.accounts.Account, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.infinimesh.node.accounts.Accounts} returns this
 */
proto.infinimesh.node.accounts.Accounts.prototype.clearAccountsList = function() {
  return this.setAccountsList([]);
};


goog.object.extend(exports, proto.infinimesh.node.accounts);
