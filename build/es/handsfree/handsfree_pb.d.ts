//
//Copyright Â© 2021-2023 Infinite Devices GmbH, Nikita Ivanovski info@slnt-opp.xyz
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// @generated by protoc-gen-es v1.10.0 with parameter "target=js+dts"
// @generated from file handsfree/handsfree.proto (package infinimesh.handsfree, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum infinimesh.handsfree.Code
 */
export declare enum Code {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: AUTH = 1;
   */
  AUTH = 1,

  /**
   * @generated from enum value: DATA = 2;
   */
  DATA = 2,

  /**
   * @generated from enum value: SUCCESS = 3;
   */
  SUCCESS = 3,

  /**
   * @generated from enum value: ERROR = 4;
   */
  ERROR = 4,
}

/**
 * @generated from message infinimesh.handsfree.ConnectionRequest
 */
export declare class ConnectionRequest extends Message<ConnectionRequest> {
  /**
   * @generated from field: string app_id = 1;
   */
  appId: string;

  /**
   * anything you want to share with the Console
   *
   * @generated from field: repeated string payload = 2;
   */
  payload: string[];

  constructor(data?: PartialMessage<ConnectionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "infinimesh.handsfree.ConnectionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectionRequest;

  static equals(a: ConnectionRequest | PlainMessage<ConnectionRequest> | undefined, b: ConnectionRequest | PlainMessage<ConnectionRequest> | undefined): boolean;
}

/**
 * @generated from message infinimesh.handsfree.ControlPacket
 */
export declare class ControlPacket extends Message<ControlPacket> {
  /**
   * @generated from field: infinimesh.handsfree.Code code = 1;
   */
  code: Code;

  /**
   * payload simply depends on returned code
   *
   * @generated from field: repeated string payload = 2;
   */
  payload: string[];

  /**
   * @generated from field: optional string app_id = 3;
   */
  appId?: string;

  constructor(data?: PartialMessage<ControlPacket>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "infinimesh.handsfree.ControlPacket";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ControlPacket;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ControlPacket;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ControlPacket;

  static equals(a: ControlPacket | PlainMessage<ControlPacket> | undefined, b: ControlPacket | PlainMessage<ControlPacket> | undefined): boolean;
}

